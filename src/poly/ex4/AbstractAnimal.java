package poly.ex4;

public abstract class AbstractAnimal {
    // 추상 클래스 2 - 순수 추상 클래스(가진 모든 메서드가 추상 메서드인 추상 클래스)
    // 모든 메서드가 추상 메서드인 순수 추상 클래스는 코드를 실행할 바디 부분이 전혀 없다.
    //  - 실행 로직은 전혀 없고, 다형성을 위한 부모 타입으로써 껍데기 역할만 제공한다.
    //  - 인스턴스 생성 불가, 상속 시 자식들은 모든 메서드 오버라이딩 필수, 다형성을 위해 사용
    //  - 즉, 서로 다른 타입들을 하나의 타입으로 묶어주기 위해 사용하는 것이다.

    // 이런 특징들을 잘 생각해보면 순수 추상 클래스는 마치 어떤 규격을 지켜서 구현해야 하는 것처럼 느껴진다.
    // 즉, 인터페이스와 같이 느껴진다.
    // USB 인터페이스는 분명한 규격이 있고, 이 규격에 맞춰 제품을 개발해야 연결이 된다.
    // 순수 추상 클래스가 USB 인터페이스 규격이라고 한다면 USB 인터페이스에 맞추어 마우스, 키보드 같은 연결 장치들을 구현할 수 있다.
    // 순수 추상 클래스는 프로그래밍에서 매우 자주 사용되므로, 자바는 순수 추상 클래스를 더 편리하게 사용할 수 있도록 인터페이스라는 개념을 제공한다.
    // 요즘에는 순수 추상 클래스가 아닌 인터페이스라고 사용한다.
    public abstract void sound();
    public abstract void move();
}

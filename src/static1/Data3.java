package static1;

public class Data3 {
    // static 변수 사용
    // 특정 클래스에서 공용으로 함께 사용할 수 있는 변수를 만들 수 있다면 이 문제를 해결할 수 있다.
    // static 키워드를 사용하면 공용으로 함께 사용하는 변수를 만들 수 있다.

    public String name;
    public static int count; // static 사용
    // 이렇게 멤버 변수에 static을 붙이게 되면, static 변수, 정적 변수 또는 클래스 변수라고 한다.
    // 객체사 생성되면 생성자에서 정적 변수 count의 값을 하나 증가시킨다.

    public Data3(String name) {
        this.name = name;
        count++; // 클래스에서 공용으로 사용하는 변수의 증가이므로 객체가 생성될 때마다 count의 값 또한 1씩 증가한다.
        // 여기서는 자신의 클래스 내부이므로 Data3.count++에서 Data3.을 생략한 것이다.
    }

    // static 변수 정리
    // 이 클래스에서 name과 count는 모두 멤버 변수(필드)이다.
    // 멤버 변수는 static이 붙은 것과 아닌 것에 따라 다음과 같이 분류할 수 있다.

    // 멤버 변수(필드)의 종류
    //  - 인스턴스 변수 : static이 붙지 않은 변수
    //  - 인스턴스 변수는 인스턴스를 만들 때마다 새로 만들어진다.

    //  - 클래스 변수 : static이 붙은 변수
    //  - 클래스 변수, 정적 변수, static 변수 등으로 부른다.
    //  - static이 붙은 멤버 변수는 인스턴스와 무관하게 클래스에 바로 접근해서 사용할 수 있고, 클래스 자체에 소속되어 있으므로 클래스 변수라 한다.
    //  - 클래스 변수는 자바 프로그램을 시작할 때 딱 1개가 만들어진다.
    //  - 인스턴스와는 다르게 보통 여러곳에서 공유하는 목적으로 사용된다.

    // 변수와 생명 주기
    // 지역 변수(매개 변수 포함) : 지역 변수는 스택 영역에 있는 스택 프레임 안에 보관된다.
    //  - 메서다가 종료되면 스택 프레임도 제거되는데 이 때 해당 스택 프레임에 포함된 지역 변수도 함께 제거되므로 지역 변수는 생존 주기가 짧다.

    // 인스턴스 변수 : 인스턴스에 있는 멤버 변수를 인스턴스 변수라고 하며 인스턴스 변수는 힙 영역을 사용한다.
    //  - 힙 영역은 GC가 발생하기 전까지는 생존하기 때문에 보통 지역 변수보다 생존 주기가 길다.

    // 클래스 변수 : 클래스 변수는 메서드 영역의 static 영역에 보관도는 변수이며 메서드 영역은 프로그램 전체에서 사용하는 공용 공간이다.
    //  - 클래스 변수는 해당 클래스가 JVM에 로딩 되는 순간 생성되고 JVM이 종료될 때까지 생명주기가 이어지기 때문에 가장 긴 생명주기를 가진다.

    // static이 정적이라는 이유는 바로 여기에 있다.
    // 힙 영역에 생성되는 인스턴스 변수는 동적으로 생성되고 제거되지만 static인 정적 변수는 거의 프로그램 실행 시점에 딱 만들어지고, 프로그램 종료 시점에 제거된다.
    // 따라서 정적 변수는 이름 그대로 정적이다.

    // 정적 변수 접근법
    // static 변수는 클래스를 통해 바로 접근할 수도 있고, 인스턴스를 통해서도 접근할 수 있다.

}
